# ESPHome configuration for Heltec WiFi LoRa 32 V3 node
# Provides web interface for number input, sends value via LoRa, displays status on OLED
# Maintainer: Revenberg / meshtastic-network
esphome:
  name: "heltec-wifi-lora-32-v3-node"
  includes:
    - my_components/web_lora_component/web_lora_component.h

## Board and framework
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
    # version: 2.0.9
    # platform_version: 6.3.0

##############################################################################
#external_components:
#  - source:
#    path: "../esphome"
#############################################################################

## Enable logging for debugging
logger:
  hardware_uart: "UART0"

## WiFi configuration (Access Point only)
wifi:
  ap:
    ssid: "meshtastic-node"
    password: "meshpassword"
  # No fallback, no scanning for networks

## OTA (Over-the-Air) update support
ota:
  platform: esphome
  password: !secret ota_password

## Enable Home Assistant API (optional)
api:

## I2C bus for OLED display
i2c:
  - id: bus_a
    sda: 18
    scl: 17
    scan: true



## Web server for local web interface
web_server:
  local: true

## Number input for web interface (sends value via LoRa)
number:
  - platform: template
    name: "Send Number"
    id: send_number
    optimistic: true
    min_value: 0
    max_value: 999999
    step: 1
    mode: box
    set_action:
      - lambda: |-
          global_web_lora_component->send_number(x);


## Use external component for LoRa send logic (C++ LoRa driver)
external_components:
  - source:
      type: local
      path: /config/my_components


## Globals for display and state tracking
globals:
  - id: last_sent_number
    type: int
    restore_value: no
    initial_value: '0'
  - id: muon_cnt
    type: int
    restore_value: no
    initial_value: '0'
  - id: muon_event_rate
    type: float
    restore_value: no
    initial_value: '0.0'
  - id: background_cnt
    type: int
    restore_value: no
    initial_value: '0'
  - id: background_event_rate
    type: float
    restore_value: no
    initial_value: '0.0'



## Fonts for OLED display
font:
# gfonts://family[@weight]
#  - file: "gfonts://Roboto+Mono"
  - file: "gfonts://Nova+Mono"
    id: roboto_16
    size: 16
  - file: "gfonts://Roboto"
    id: roboto_10
    size: 10

## OLED display configuration
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    reset_pin: 21
    i2c_id: bus_a
    address: 0x3C
    # auto_clear_enabled: false
    lambda: |-
      // Display muon and background event counts
      it.print(0,  2, id(roboto_10), "Muons");
      it.printf(0, 10, id(roboto_16), "%08d %5.1f", id(muon_cnt), id(muon_event_rate));
      
      it.print(0, 32, id(roboto_10), "Background");
      it.printf(0, 40, id(roboto_16), "%08d %5.1f", id(background_cnt), id(background_event_rate));

