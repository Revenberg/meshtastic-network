substitutions:
  node_id: "rpi_gateway"
  mqtt_broker: "mosquitto"

esphome:
  name: ${node_id}
  platform: ESP32
  board: heltec_wifi_lora_32_V3

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Fallback-${node_id}"
    password: "fallback123"

logger:

api:

ota:

mqtt:
  broker: ${mqtt_broker}
  discovery: false

globals:
  - id: mac_str
    type: std::string
    initial_value: ''
  - id: latest_msg
    type: std::string
    initial_value: ''

i2c:
  sda: GPIO21
  scl: GPIO22

font:
  - file: "fonts/Roboto-Regular.ttf"
    id: font12
    size: 12

display:
  - platform: ssd1306_i2c
    id: my_display
    address: 0x3C
    lambda: |-
      it.printf(0, 0, id(font12), "MAC:%s", id(mac_str).c_str());
      it.printf(0, 16, id(font12), "%s", id(latest_msg).c_str());

on_boot:
  priority: -10
  then:
    - lambda: |-
        uint8_t mac[6];
        esp_read_mac(mac, ESP_MAC_WIFI_STA);
        char buf[18];
        sprintf(buf, "%02X:%02X:%02X:%02X:%02X:%02X",
                mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
        id(mac_str) = std::string(buf);
    - delay: 1s
    - mqtt.publish:
        topic: "rpi/name_request"
        payload:
          lambda: 'return id(mac_str).c_str();'

external_components:
  - source: /config/my_components

custom_component:
  - lambda: |-
      auto web = new WebMqttComponent("${node_id}");
      App.register_component(web);
